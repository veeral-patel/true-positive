"""
Represents an investigation.
"""
type Case {
  assignedTo: User
  createdBy: User!
  description: String
  id: ID!
  name: String!
  priority: Priority!
  status: Status!
  tags: [String!]!
}

"""
Autogenerated input type of CreateCase
"""
input CreateCaseInput {
  assignedTo: ID

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  createdBy: ID!
  description: String
  name: String!
  priority: ID!
  status: ID!
  tags: [String!]
}

"""
Autogenerated return type of CreateCase
"""
type CreateCasePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated input type of CreatePriority
"""
input CreatePriorityInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  description: String
  name: String!
}

"""
Autogenerated return type of CreatePriority
"""
type CreatePriorityPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  priority: Priority
}

"""
Autogenerated input type of CreateStatus
"""
input CreateStatusInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  description: String
  name: String!
}

"""
Autogenerated return type of CreateStatus
"""
type CreateStatusPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  status: Status
}

"""
Mutations are used for creating, updating, or deleting data.
"""
type Mutation {
  """
  Creates a new case.
  """
  createCase(input: CreateCaseInput!): CreateCasePayload
  createPriority(input: CreatePriorityInput!): CreatePriorityPayload
  createStatus(input: CreateStatusInput!): CreateStatusPayload
}

"""
Describes the severity level of a case.
"""
type Priority {
  description: String
  id: ID!
  name: String!
}

"""
Queries are used for retrieving data.
"""
type Query {
  """
  Retrieve a case.
  """
  case(id: ID!): Case!

  """
  List all cases.
  """
  cases: [Case!]!

  """
  Lists all priorities.
  """
  priorities: [Priority!]!

  """
  Retrieve a priority.
  """
  priority(id: ID!): Priority!

  """
  Retrieve a status.
  """
  status(id: ID!): Status!

  """
  Lists all statuses.
  """
  statuses: [Status!]!
}

"""
A state a case can be in.
"""
type Status {
  description: String
  id: ID!
  name: String!
}

"""
Represents an user
"""
type User {
  id: ID!
  username: String!
}

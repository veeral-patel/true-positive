/* This is a mst-gql generated file, don't modify it manually */
/* eslint-disable */
/* tslint:disable */

import { types } from "mobx-state-tree"
import { MSTGQLObject, MSTGQLRef, QueryBuilder } from "mst-gql"
import { StatusModel } from "./StatusModel"
import { StatusModelSelector } from "./StatusModel.base"
import { RootStoreType } from "./index"


/**
 * RenameStatusPayloadBase
 * auto generated base class for the model RenameStatusPayloadModel.
 *
 * Autogenerated return type of RenameStatus
 */
export const RenameStatusPayloadModelBase = MSTGQLObject
  .named('RenameStatusPayload')
  .props({
    __typename: types.optional(types.literal("RenameStatusPayload"), "RenameStatusPayload"),
    /** A unique identifier for the client performing the mutation. */
    clientMutationId: types.maybeNull(types.string),
    /** The updated status. */
    status: types.maybeNull(MSTGQLRef(types.late(() => StatusModel))),
  })
  .views(self => ({
    get store() {
      return self.__getStore<RootStoreType>()
    }
  }))

export class RenameStatusPayloadModelSelector extends QueryBuilder {
  get clientMutationId() { return this.__attr(`clientMutationId`) }
  status(builder?: string | StatusModelSelector | ((selector: StatusModelSelector) => StatusModelSelector)) { return this.__child(`status`, StatusModelSelector, builder) }
}
export function selectFromRenameStatusPayload() {
  return new RenameStatusPayloadModelSelector()
}

export const renameStatusPayloadModelPrimitives = selectFromRenameStatusPayload().clientMutationId

/* This is a mst-gql generated file, don't modify it manually */
/* eslint-disable */
/* tslint:disable */

import { types } from "mobx-state-tree"
import { MSTGQLObject, MSTGQLRef, QueryBuilder } from "mst-gql"
import { PriorityModel } from "./PriorityModel"
import { PriorityModelSelector } from "./PriorityModel.base"
import { RootStoreType } from "./index"


/**
 * CreatePriorityPayloadBase
 * auto generated base class for the model CreatePriorityPayloadModel.
 *
 * Autogenerated return type of CreatePriority
 */
export const CreatePriorityPayloadModelBase = MSTGQLObject
  .named('CreatePriorityPayload')
  .props({
    __typename: types.optional(types.literal("CreatePriorityPayload"), "CreatePriorityPayload"),
    /** A unique identifier for the client performing the mutation. */
    clientMutationId: types.maybeNull(types.string),
    /** The newly created priority. */
    priority: types.maybeNull(MSTGQLRef(types.late(() => PriorityModel))),
  })
  .views(self => ({
    get store() {
      return self.__getStore<RootStoreType>()
    }
  }))

export class CreatePriorityPayloadModelSelector extends QueryBuilder {
  get clientMutationId() { return this.__attr(`clientMutationId`) }
  priority(builder?: string | PriorityModelSelector | ((selector: PriorityModelSelector) => PriorityModelSelector)) { return this.__child(`priority`, PriorityModelSelector, builder) }
}
export function selectFromCreatePriorityPayload() {
  return new CreatePriorityPayloadModelSelector()
}

export const createPriorityPayloadModelPrimitives = selectFromCreatePriorityPayload().clientMutationId
